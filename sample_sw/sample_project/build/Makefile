# This software was written by Michele Alessandrini in 2015.
# No copyright is claimed, and the software is hereby released
# into the public domain.
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any means.


# Source base directory
BASE_DIR = ../src

# Program name
PROGRAM_NAME = sample_project

# Variables identifying the current configuration and their default values
RELEASE = 0
COOL = 0

# Output directory, depending on the previous variables
ifeq ($(RELEASE), 1)
BUILD_DIR = ./Release
ifeq ($(COOL), 1)
BUILD_DIR = ./Release_Cool
endif
else
BUILD_DIR = ./Debug
endif

# Lists of source and header files, generated by finding all the files of a given type
# in the source base directory and all its subdirectories.
# The list of header files is not needed by the Makefile, but only by the HalfIDE
# information, so to show them in the IDE.
SRCS = $(shell find $(BASE_DIR) -name '*.cpp')
HDRS = $(shell find $(BASE_DIR) -name '*.h')

# Lists of object and dependency files, generated from the list of source
# files, by replacing the leading source directory with the output directory.
# That way, output files have the same tree path as in the source directory.
OBJS = $(addprefix $(BUILD_DIR)/, $(patsubst $(BASE_DIR)/%, %, $(SRCS:%.cpp=%.o)))
DEPS = $(addprefix $(BUILD_DIR)/, $(patsubst $(BASE_DIR)/%, %, $(SRCS:%.cpp=%.d)))

# Compiler and its options, depending on the configuration's variables
COMPILER = g++
CXX_DEFINES = CONTACT_UFO  ALIEN_RACE=martian
CXX_INCLUDES = $(BASE_DIR)/stuff1  /opt/aliens/mars

ifeq ($(COOL), 1)
CXX_DEFINES += COOL_VERSION
endif

CXX_FLAGS = -ansi -Wall -Wextra

ifeq ($(RELEASE), 1)
CXX_FLAGS += -O2
else
CXX_FLAGS += -g
endif

CXX_ALL_FLAGS = $(CXX_FLAGS)  $(CXX_DEFINES:%=-D%)  $(CXX_INCLUDES:%=-I%)


# list of targets
TARGETS = $(BUILD_DIR)/$(PROGRAM_NAME)


# Targets

all: $(TARGETS)

clean:
	rm -f $(TARGETS) $(OBJS) $(DEPS)
	find $(BUILD_DIR) -depth -type d -empty -exec rmdir {} \;


# Rules

include $(DEPS)

# C++ file compilation
$(BUILD_DIR)/%.o: $(BASE_DIR)/%.cpp
	-mkdir -p $(dir $@)
	$(COMPILER) $(CXX_ALL_FLAGS) -o $@ -c $<


# automatic C++ dependency handling
$(BUILD_DIR)/%.d: $(BASE_DIR)/%.cpp
	-mkdir -p $(dir $@)
	$(COMPILER) -MM -MT $(addsuffix .o, $(basename $@)) $(CXX_ALL_FLAGS) $< | sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' > $@


# Executable linking
$(BUILD_DIR)/$(PROGRAM_NAME): $(OBJS)
	$(COMPILER) $(CXX_ALL_FLAGS) -o $@ $^


# HalfIDE target

HalfIDE:
	@echo projectName $(PROGRAM_NAME)
	@echo sourceBaseDir $(BASE_DIR)
	@echo projectFiles  $(SRCS)
	@echo projectFiles  $(HDRS)
	@echo projectFiles  $(BASE_DIR)/../doc/myprogram.htm  $(BASE_DIR)/../doc/myprogram.png
	@echo configurations  "Debug|"
	@echo configurations  "Release|RELEASE=1"
	@echo configurations  "\"Release Cool|RELEASE=1|COOL=1\""
	@echo compiler  $(COMPILER)
	@echo compilerDefines  $(CXX_DEFINES)
	@echo compilerIncludes $(CXX_INCLUDES)
	@echo compilerOptions  $(CXX_FLAGS)
	@echo runExe  $(BUILD_DIR)/$(PROGRAM_NAME)
	@echo debugDebugger  gdb
	@echo openExternally  ".*\.png|"


# Special targets
.PHONY: all clean HalfIDE
.SECONDARY: $(OBJS)
FORCE:
